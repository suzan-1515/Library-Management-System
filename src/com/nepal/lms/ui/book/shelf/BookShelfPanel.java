/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.nepal.lms.ui.book.shelf;

import com.nepal.lms.action.ShelfListener;
import com.nepal.lms.bll.ShelfBLL;
import com.nepal.lms.custom.Alert;
import com.nepal.lms.entity.shelf.Shelf;
import com.nepal.lms.exception.CorruptedDataException;
import com.nepal.lms.exception.MissingFileException;
import com.nepal.lms.exception.RecordNotFoundException;
import com.nepal.lms.util.Logy;
import com.nepal.lms.view.BookView;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @shelf Suzn
 */
public class BookShelfPanel extends javax.swing.JPanel implements BookView<Shelf>, ShelfListener {

    private List<Shelf> shelfList;

    /**
     * Creates new form BookShelfPanel
     */
    public BookShelfPanel() {
        initComponents();
        this.loadTableData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        centerPanel = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        searchPanel = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        centerSubPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        bottomPanel2 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        updateBookShelfButton = new javax.swing.JButton();
        addBookShelfButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        centerPanel.setLayout(new java.awt.CardLayout());

        jPanel8.setLayout(new java.awt.BorderLayout());

        searchPanel.setBackground(new java.awt.Color(249, 249, 249));
        searchPanel.setPreferredSize(new java.awt.Dimension(367, 70));
        java.awt.FlowLayout flowLayout3 = new java.awt.FlowLayout();
        flowLayout3.setAlignOnBaseline(true);
        searchPanel.setLayout(flowLayout3);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setOpaque(false);
        jPanel9.setPreferredSize(new java.awt.Dimension(280, 65));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search_blue.png"))); // NOI18N

        searchTextField.setBackground(new java.awt.Color(249, 249, 249));
        searchTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        searchTextField.setToolTipText("Search for title, publisher, author..");
        searchTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(39, 26, 252)));
        searchTextField.setMinimumSize(new java.awt.Dimension(200, 15));
        searchTextField.setOpaque(false);
        searchTextField.setPreferredSize(new java.awt.Dimension(200, 15));
        searchTextField.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                String text = searchTextField.getText();
                System.out.println(text);
                if (text.trim().length() == 0) {
                    ((javax.swing.table.TableRowSorter<javax.swing.table.TableModel>)table.getRowSorter()).setRowFilter(null);
                } else {
                    ((javax.swing.table.TableRowSorter<javax.swing.table.TableModel>)table.getRowSorter()).setRowFilter(javax.swing.RowFilter.regexFilter("^(?i)" + text));
                }
                table.repaint();
            }
            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                String text = searchTextField.getText();
                if (text.trim().length() == 0) {
                    ((javax.swing.table.TableRowSorter<javax.swing.table.TableModel>)table.getRowSorter()).setRowFilter(null);
                } else {
                    ((javax.swing.table.TableRowSorter<javax.swing.table.TableModel>)table.getRowSorter()).setRowFilter(javax.swing.RowFilter.regexFilter("^(?i)" + text));
                }
            }
            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                //not needed: throw new UnsupportedOperationException("Not supported yet.");
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel5)
                .addGap(5, 5, 5)
                .addComponent(searchTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        searchPanel.add(jPanel9);

        jPanel8.add(searchPanel, java.awt.BorderLayout.PAGE_START);

        centerSubPanel.setLayout(new java.awt.CardLayout());

        javax.swing.table.DefaultTableModel tableModel = new javax.swing.table.DefaultTableModel(){
            @Override
            public boolean isCellEditable(int i, int i1) {
                return false;
            }
        };

        tableModel.addColumn(com.nepal.lms.entity.shelf.ShelfParams.ID.toUpperCase());
        tableModel.addColumn(com.nepal.lms.entity.shelf.ShelfParams.LOCATION.toUpperCase());
        table.setModel(tableModel);
        table.setRowHeight(26);
        table.setShowHorizontalLines(false);
        jScrollPane3.setViewportView(table);
        javax.swing.table.TableRowSorter<javax.swing.table.TableModel> rowSorter = new javax.swing.table.TableRowSorter<>(table.getModel());
        table.setRowSorter(rowSorter);

        centerSubPanel.add(jScrollPane3, "card2");

        jPanel8.add(centerSubPanel, java.awt.BorderLayout.CENTER);

        bottomPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.TRAILING));

        jPanel10.setOpaque(false);

        updateBookShelfButton.setText("Update");
        updateBookShelfButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updateBookShelfButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBookShelfButtonActionPerformed(evt);
            }
        });

        addBookShelfButton.setText("Add New");
        addBookShelfButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addBookShelfButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBookShelfButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(addBookShelfButton, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateBookShelfButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBookShelfButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateBookShelfButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bottomPanel2.add(jPanel10);

        jPanel8.add(bottomPanel2, java.awt.BorderLayout.PAGE_END);

        centerPanel.add(jPanel8, "card2");

        add(centerPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void updateBookShelfButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBookShelfButtonActionPerformed
        int row = table.getSelectedRow();
        if (row > -1) {
            Shelf s = getBeanFromRow(row);
            if (s != null) {
                BookShelfUpdateDialog bookShelfUpdateDialog = new BookShelfUpdateDialog((JFrame) SwingUtilities.getWindowAncestor(this),
                        true, s);
                bookShelfUpdateDialog.setItemUpdatedListener((Shelf shelf) -> {
                    updateShelfData(shelf, row);
                });
                bookShelfUpdateDialog.setVisible(true);
            }
        }
    }//GEN-LAST:event_updateBookShelfButtonActionPerformed

    private void addBookShelfButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBookShelfButtonActionPerformed
        BookShelfInsertDialog bookShelfInsertDialog = new BookShelfInsertDialog((JFrame) SwingUtilities.getWindowAncestor(this), true);
        bookShelfInsertDialog.setItemAddedListener((Shelf shelf) -> {
            appendShelfData(shelf);
        });
        bookShelfInsertDialog.setVisible(true);
    }//GEN-LAST:event_addBookShelfButtonActionPerformed

    @Override
    public final void loadTableData() {

        if (shelfList == null || shelfList.isEmpty()) {
            Logy.d("Loading shelf from file for first Time");
            try {
                shelfList = ShelfBLL.getAllShelf();
            } catch (RecordNotFoundException | MissingFileException | CorruptedDataException ex) {
                Logy.e(ex);
                Alert.showError(this, ex.getMessage());
                return;
            }

        } else {
            Logy.d("shelf already loaded");
        }
        this.fillTableData(shelfList);

    }

    /**
     *
     * @param shelfInfoList
     */
    @Override
    public final void fillTableData(List<Shelf> shelfInfoList) {

        shelfInfoList.stream().forEach((shelfInfo) -> {
            addShelfRowData(shelfInfo);
        });

    }

    public void addShelfRowData(Shelf shelf) {
        ((DefaultTableModel) table.getModel()).insertRow(0, new Object[]{
            shelf.getId(),
            shelf.getLocation()
        });
    }

    private void updateShelfData(Shelf s, int row) {
        for (Shelf shelf : shelfList) {
            if (shelf.getId() == shelf.getId()) {
                shelf.setLocation(shelf.getLocation());
                break;
            }
        }

        updateShelfRowData(s, row);
    }

    private void updateShelfRowData(Shelf shelf, int row) {
        ((DefaultTableModel) table.getModel()).setValueAt(shelf.getLocation(), row, 1);
    }

    private Shelf getBeanFromRow(int row) {
        int id = (int) table.getModel().getValueAt(row, 0);
        return shelfList.stream()
                .filter((shelf) -> shelf.getId() == id)
                .findFirst()
                .orElse(null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBookShelfButton;
    private javax.swing.JPanel bottomPanel2;
    private javax.swing.JPanel centerPanel;
    private javax.swing.JPanel centerSubPanel;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JTable table;
    private javax.swing.JButton updateBookShelfButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onShelfDataChanged(Shelf s) {
        appendShelfData(s);
    }

    private void appendShelfData(Shelf s) {
        shelfList.add(s);
        addShelfRowData(s);
    }
}
