/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sujan.lms.ui.book;

import com.sujan.lms.entity.user.UserInfo;
import com.sujan.lms.ui.book.stock.BookStockPanel;
import com.sujan.lms.ui.book.shelf.BookShelfPanel;
import com.sujan.lms.ui.book.publisher.BookPublisherPanel;
import com.sujan.lms.ui.book.author.BookAuthorPanel;
import com.sujan.lms.ui.book.transaction.BookTransactionPanel;
import com.sujan.lms.ui.book.subject.BookSubjectPanel;
import com.sujan.lms.util.ComponentUtils;
import com.sujan.lms.util.Logy;

/**
 *
 * @author Suzn
 */
public class BookPanel extends javax.swing.JPanel {

    private BookStockPanel bookStockPanel;
    private BookSubjectPanel bookSubjectPanel;
    private BookAuthorPanel bookAuthorPanel;
    private BookPublisherPanel bookPublisherPanel;
    private BookShelfPanel bookShelfPanel;
    private BookTransactionPanel bookTransactionPanel;
    private final UserInfo userInfo;

    /**
     * Creates new form LibrarianBookPanel
     *
     * @param userInfo
     */
    public BookPanel(UserInfo userInfo) {
        super();
        initComponents();
        this.userInfo = userInfo;

        Logy.d("Librarian Book panel initialized");
        ComponentUtils.addToPanel(this.centerPanel, getBookStockPanel());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        centerPanel = new javax.swing.JPanel();
        topPanel = new javax.swing.JPanel();
        titlePanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        tabMenuPanel = new javax.swing.JPanel();
        tabsPanel = new javax.swing.JPanel();
        stockMenuButton = new javax.swing.JButton();
        subjectMenuButton = new javax.swing.JButton();
        authorMenuButton = new javax.swing.JButton();
        publisherMenuButton = new javax.swing.JButton();
        shelfMenuButton = new javax.swing.JButton();
        transactionMenuButton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(300, 80));
        setLayout(new java.awt.BorderLayout());

        centerPanel.setLayout(new java.awt.CardLayout());
        add(centerPanel, java.awt.BorderLayout.CENTER);

        topPanel.setBackground(new java.awt.Color(249, 249, 249));
        topPanel.setOpaque(false);
        topPanel.setPreferredSize(new java.awt.Dimension(300, 80));
        topPanel.setLayout(new java.awt.GridLayout(1, 2, 5, 0));

        titlePanel.setBackground(new java.awt.Color(255, 255, 255));
        titlePanel.setOpaque(false);
        titlePanel.setPreferredSize(new java.awt.Dimension(50, 80));
        titlePanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEADING));

        jPanel1.setOpaque(false);

        title.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        title.setText("Book");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(title)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        titlePanel.add(jPanel1);

        topPanel.add(titlePanel);

        tabMenuPanel.setOpaque(false);
        tabMenuPanel.setPreferredSize(new java.awt.Dimension(300, 70));

        tabsPanel.setBackground(new java.awt.Color(255, 255, 255));
        tabsPanel.setOpaque(false);

        stockMenuButton.setBackground(selectedMenuColor);
        stockMenuButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        stockMenuButton.setForeground(new java.awt.Color(255, 255, 255));
        stockMenuButton.setText("Stock");
        stockMenuButton.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(153, 153, 153)), javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(215, 215, 215))));
        stockMenuButton.setContentAreaFilled(false);
        stockMenuButton.setOpaque(true);
        stockMenuButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                if(!com.sujan.lms.util.ColorUtils.isSame(stockMenuButton.getBackground(),selectedMenuColor)){
                    stockMenuButton.setBackground(hoverMenuColor);
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                if(!com.sujan.lms.util.ColorUtils.isSame(stockMenuButton.getBackground(),selectedMenuColor)){
                    stockMenuButton.setBackground(defaultMenuColor);
                }
            }
        });
        stockMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockMenuButton.setBackground(selectedMenuColor);
                stockMenuButton.setForeground(selectedMenuTextColor);
                stockMenuButton.setBorder(selectedMenuBorder);

                subjectMenuButton.setBackground(defaultMenuColor);
                subjectMenuButton.setBorder(defaultMenuBorder);
                subjectMenuButton.setForeground(defaultMenuTextColor);
                authorMenuButton.setBackground(defaultMenuColor);
                authorMenuButton.setBorder(defaultMenuBorder);
                authorMenuButton.setForeground(defaultMenuTextColor);
                publisherMenuButton.setBackground(defaultMenuColor);
                publisherMenuButton.setBorder(defaultMenuBorder);
                publisherMenuButton.setForeground(defaultMenuTextColor);
                shelfMenuButton.setBackground(defaultMenuColor);
                shelfMenuButton.setBorder(defaultMenuBorder);
                shelfMenuButton.setForeground(defaultMenuTextColor);
                transactionMenuButton.setBackground(defaultMenuColor);
                transactionMenuButton.setBorder(defaultMenuBorder);
                transactionMenuButton.setForeground(defaultMenuTextColor);

                stockMenuButtonActionPerformed(evt);
            }
        });

        subjectMenuButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        subjectMenuButton.setForeground(new java.awt.Color(62, 40, 40));
        subjectMenuButton.setText("Subject");
        subjectMenuButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 51, 0)));
        subjectMenuButton.setContentAreaFilled(false);
        subjectMenuButton.setOpaque(true);
        subjectMenuButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                if(!com.sujan.lms.util.ColorUtils.isSame(subjectMenuButton.getBackground(),selectedMenuColor)){
                    subjectMenuButton.setBackground(hoverMenuColor);
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                if(!com.sujan.lms.util.ColorUtils.isSame(subjectMenuButton.getBackground(),selectedMenuColor)){
                    subjectMenuButton.setBackground(defaultMenuColor);
                }
            }
        });
        subjectMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectMenuButton.setBackground(selectedMenuColor);
                subjectMenuButton.setForeground(selectedMenuTextColor);
                subjectMenuButton.setBorder(selectedMenuBorder);

                stockMenuButton.setBackground(defaultMenuColor);
                stockMenuButton.setBorder(defaultMenuBorder);
                stockMenuButton.setForeground(defaultMenuTextColor);
                authorMenuButton.setBackground(defaultMenuColor);
                authorMenuButton.setBorder(defaultMenuBorder);
                authorMenuButton.setForeground(defaultMenuTextColor);
                publisherMenuButton.setBackground(defaultMenuColor);
                publisherMenuButton.setBorder(defaultMenuBorder);
                publisherMenuButton.setForeground(defaultMenuTextColor);
                shelfMenuButton.setBackground(defaultMenuColor);
                shelfMenuButton.setBorder(defaultMenuBorder);
                shelfMenuButton.setForeground(defaultMenuTextColor);
                transactionMenuButton.setBackground(defaultMenuColor);
                transactionMenuButton.setBorder(defaultMenuBorder);
                transactionMenuButton.setForeground(defaultMenuTextColor);

                subjectMenuButtonActionPerformed(evt);
            }
        });

        authorMenuButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        authorMenuButton.setForeground(new java.awt.Color(62, 40, 40));
        authorMenuButton.setText("Author");
        authorMenuButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 51, 0)));
        authorMenuButton.setContentAreaFilled(false);
        authorMenuButton.setOpaque(true);
        authorMenuButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                if(!com.sujan.lms.util.ColorUtils.isSame(authorMenuButton.getBackground(),selectedMenuColor)){
                    authorMenuButton.setBackground(hoverMenuColor);
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                if(!com.sujan.lms.util.ColorUtils.isSame(authorMenuButton.getBackground(),selectedMenuColor)){
                    authorMenuButton.setBackground(defaultMenuColor);
                }
            }
        });
        authorMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorMenuButton.setBackground(selectedMenuColor);
                authorMenuButton.setForeground(selectedMenuTextColor);
                authorMenuButton.setBorder(selectedMenuBorder);

                stockMenuButton.setBackground(defaultMenuColor);
                stockMenuButton.setBorder(defaultMenuBorder);
                stockMenuButton.setForeground(defaultMenuTextColor);
                subjectMenuButton.setBackground(defaultMenuColor);
                subjectMenuButton.setBorder(defaultMenuBorder);
                subjectMenuButton.setForeground(defaultMenuTextColor);
                publisherMenuButton.setBackground(defaultMenuColor);
                publisherMenuButton.setBorder(defaultMenuBorder);
                publisherMenuButton.setForeground(defaultMenuTextColor);
                shelfMenuButton.setBackground(defaultMenuColor);
                shelfMenuButton.setBorder(defaultMenuBorder);
                shelfMenuButton.setForeground(defaultMenuTextColor);
                transactionMenuButton.setBackground(defaultMenuColor);
                transactionMenuButton.setBorder(defaultMenuBorder);
                transactionMenuButton.setForeground(defaultMenuTextColor);

                authorMenuButtonActionPerformed(evt);
            }
        });

        publisherMenuButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        publisherMenuButton.setForeground(new java.awt.Color(62, 40, 40));
        publisherMenuButton.setText("Publisher");
        publisherMenuButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 51, 0)));
        publisherMenuButton.setContentAreaFilled(false);
        publisherMenuButton.setOpaque(true);
        publisherMenuButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                if(!com.sujan.lms.util.ColorUtils.isSame(publisherMenuButton.getBackground(),selectedMenuColor)){
                    publisherMenuButton.setBackground(hoverMenuColor);
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                if(!com.sujan.lms.util.ColorUtils.isSame(publisherMenuButton.getBackground(),selectedMenuColor)){
                    publisherMenuButton.setBackground(defaultMenuColor);
                }
            }
        });
        publisherMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publisherMenuButton.setBackground(selectedMenuColor);
                publisherMenuButton.setForeground(selectedMenuTextColor);
                publisherMenuButton.setBorder(selectedMenuBorder);

                stockMenuButton.setBackground(defaultMenuColor);
                stockMenuButton.setBorder(defaultMenuBorder);
                stockMenuButton.setForeground(defaultMenuTextColor);
                subjectMenuButton.setBackground(defaultMenuColor);
                subjectMenuButton.setBorder(defaultMenuBorder);
                subjectMenuButton.setForeground(defaultMenuTextColor);
                authorMenuButton.setBackground(defaultMenuColor);
                authorMenuButton.setBorder(defaultMenuBorder);
                authorMenuButton.setForeground(defaultMenuTextColor);
                shelfMenuButton.setBackground(defaultMenuColor);
                shelfMenuButton.setBorder(defaultMenuBorder);
                shelfMenuButton.setForeground(defaultMenuTextColor);
                transactionMenuButton.setBackground(defaultMenuColor);
                transactionMenuButton.setBorder(defaultMenuBorder);
                transactionMenuButton.setForeground(defaultMenuTextColor);
                publisherMenuButtonActionPerformed(evt);
            }
        });

        shelfMenuButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        shelfMenuButton.setForeground(new java.awt.Color(62, 40, 40));
        shelfMenuButton.setText("Shelf");
        shelfMenuButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 51, 0)));
        shelfMenuButton.setContentAreaFilled(false);
        shelfMenuButton.setOpaque(true);
        shelfMenuButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                if(!com.sujan.lms.util.ColorUtils.isSame(shelfMenuButton.getBackground(),selectedMenuColor)){
                    shelfMenuButton.setBackground(hoverMenuColor);
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                if(!com.sujan.lms.util.ColorUtils.isSame(shelfMenuButton.getBackground(),selectedMenuColor)){
                    shelfMenuButton.setBackground(defaultMenuColor);
                }
            }
        });
        shelfMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shelfMenuButton.setBackground(selectedMenuColor);
                shelfMenuButton.setForeground(selectedMenuTextColor);
                shelfMenuButton.setBorder(selectedMenuBorder);

                stockMenuButton.setBackground(defaultMenuColor);
                stockMenuButton.setBorder(defaultMenuBorder);
                stockMenuButton.setForeground(defaultMenuTextColor);
                subjectMenuButton.setBackground(defaultMenuColor);
                subjectMenuButton.setBorder(defaultMenuBorder);
                subjectMenuButton.setForeground(defaultMenuTextColor);
                authorMenuButton.setBackground(defaultMenuColor);
                authorMenuButton.setBorder(defaultMenuBorder);
                authorMenuButton.setForeground(defaultMenuTextColor);
                publisherMenuButton.setBackground(defaultMenuColor);
                publisherMenuButton.setBorder(defaultMenuBorder);
                publisherMenuButton.setForeground(defaultMenuTextColor);
                transactionMenuButton.setBackground(defaultMenuColor);
                transactionMenuButton.setBorder(defaultMenuBorder);
                transactionMenuButton.setForeground(defaultMenuTextColor);
                shelfMenuButtonActionPerformed(evt);
            }
        });

        transactionMenuButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        transactionMenuButton.setForeground(new java.awt.Color(62, 40, 40));
        transactionMenuButton.setText("Transaction");
        transactionMenuButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 51, 0)));
        transactionMenuButton.setContentAreaFilled(false);
        transactionMenuButton.setOpaque(true);
        transactionMenuButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                if(!com.sujan.lms.util.ColorUtils.isSame(transactionMenuButton.getBackground(),selectedMenuColor)){
                    transactionMenuButton.setBackground(hoverMenuColor);
                }
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                if(!com.sujan.lms.util.ColorUtils.isSame(transactionMenuButton.getBackground(),selectedMenuColor)){
                    transactionMenuButton.setBackground(defaultMenuColor);
                }
            }
        });
        transactionMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transactionMenuButton.setBackground(selectedMenuColor);
                transactionMenuButton.setForeground(selectedMenuTextColor);
                transactionMenuButton.setBorder(selectedMenuBorder);

                stockMenuButton.setBackground(defaultMenuColor);
                stockMenuButton.setForeground(defaultMenuTextColor);
                stockMenuButton.setBorder(defaultMenuBorder);
                subjectMenuButton.setBackground(defaultMenuColor);
                subjectMenuButton.setBorder(defaultMenuBorder);
                subjectMenuButton.setForeground(defaultMenuTextColor);
                authorMenuButton.setBackground(defaultMenuColor);
                authorMenuButton.setBorder(defaultMenuBorder);
                authorMenuButton.setForeground(defaultMenuTextColor);
                publisherMenuButton.setBackground(defaultMenuColor);
                publisherMenuButton.setBorder(defaultMenuBorder);
                publisherMenuButton.setForeground(defaultMenuTextColor);
                shelfMenuButton.setBackground(defaultMenuColor);
                shelfMenuButton.setBorder(defaultMenuBorder);
                shelfMenuButton.setForeground(defaultMenuTextColor);
                transactionMenuButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabsPanelLayout = new javax.swing.GroupLayout(tabsPanel);
        tabsPanel.setLayout(tabsPanelLayout);
        tabsPanelLayout.setHorizontalGroup(
            tabsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stockMenuButton)
                .addGap(0, 0, 0)
                .addComponent(subjectMenuButton)
                .addGap(0, 0, 0)
                .addComponent(authorMenuButton)
                .addGap(0, 0, 0)
                .addComponent(publisherMenuButton)
                .addGap(0, 0, 0)
                .addComponent(shelfMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(transactionMenuButton)
                .addContainerGap())
        );

        tabsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {authorMenuButton, publisherMenuButton, shelfMenuButton, stockMenuButton, subjectMenuButton});

        tabsPanelLayout.setVerticalGroup(
            tabsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabsPanelLayout.createSequentialGroup()
                .addGroup(tabsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(authorMenuButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(subjectMenuButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stockMenuButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(transactionMenuButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tabsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(publisherMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(shelfMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        tabsPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {authorMenuButton, publisherMenuButton, shelfMenuButton, stockMenuButton, subjectMenuButton});

        javax.swing.GroupLayout tabMenuPanelLayout = new javax.swing.GroupLayout(tabMenuPanel);
        tabMenuPanel.setLayout(tabMenuPanelLayout);
        tabMenuPanelLayout.setHorizontalGroup(
            tabMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabMenuPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tabsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        tabMenuPanelLayout.setVerticalGroup(
            tabMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabMenuPanelLayout.createSequentialGroup()
                .addComponent(tabsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11))
        );

        topPanel.add(tabMenuPanel);

        add(topPanel, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    private void stockMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {
        Logy.d("Book stock menu clicked");
        ComponentUtils.addToPanel(this.centerPanel, getBookStockPanel());
    }

    private void subjectMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {
        Logy.d("Book subject menu clicked");
        ComponentUtils.addToPanel(this.centerPanel, getBookSubjectPanel());
    }

    private void authorMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {
        Logy.d("Book author menu clicked");
        ComponentUtils.addToPanel(this.centerPanel, getBookAuthorPanel());
    }

    private void publisherMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {
        Logy.d("Book publisher menu clicked");
        ComponentUtils.addToPanel(this.centerPanel, getBookPublisherPanel());
    }

    private void shelfMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {
        Logy.d("Book shelf menu clicked");
        ComponentUtils.addToPanel(this.centerPanel, getBookShelfPanel());
    }

    private void transactionMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {
        Logy.d("Transacttion menu clicked");
        ComponentUtils.addToPanel(this.centerPanel, getBookTransactionPanel());
    }

    private BookStockPanel getBookStockPanel() {
        if (bookStockPanel == null) {
            Logy.d("Creating book stock panel instance");
            bookStockPanel = new BookStockPanel(userInfo);
        } else {
            Logy.d("book stock panel already created, returning available instance");
        }
        return bookStockPanel;
    }

    private BookSubjectPanel getBookSubjectPanel() {
        if (bookSubjectPanel == null) {
            Logy.d("Creating book subject panel instance");
            bookSubjectPanel = new BookSubjectPanel(userInfo);
            bookStockPanel.setSubjectListener(bookSubjectPanel);
        } else {
            Logy.d("book subject panel already created, returning available instance");
        }
        return bookSubjectPanel;
    }

    private BookAuthorPanel getBookAuthorPanel() {
        if (bookAuthorPanel == null) {
            Logy.d("Creating book author panel instance");
            bookAuthorPanel = new BookAuthorPanel(userInfo);
            bookStockPanel.setAuthorListener(bookAuthorPanel);
        } else {
            Logy.d("book author panel already created, returning available instance");
        }
        return bookAuthorPanel;
    }

    private BookPublisherPanel getBookPublisherPanel() {
        if (bookPublisherPanel == null) {
            Logy.d("Creating book publisher panel instance");
            bookPublisherPanel = new BookPublisherPanel(userInfo);
            bookStockPanel.setPublisherListener(bookPublisherPanel);
        } else {
            Logy.d("book publisher panel already created, returning available instance");
        }
        return bookPublisherPanel;
    }

    private BookShelfPanel getBookShelfPanel() {
        if (bookShelfPanel == null) {
            Logy.d("Creating book shelf panel instance");
            bookShelfPanel = new BookShelfPanel(userInfo);
            bookStockPanel.setShelfListener(bookShelfPanel);
        } else {
            Logy.d("book shelf panel already created, returning available instance");
        }
        return bookShelfPanel;
    }

    private BookTransactionPanel getBookTransactionPanel() {
        if (bookTransactionPanel == null) {
            Logy.d("Creating transaction panel instance");
            bookTransactionPanel = new BookTransactionPanel(userInfo);
            bookTransactionPanel.setTransactionListener(bookStockPanel);
            bookStockPanel.setBorrowListener(bookTransactionPanel);
        } else {
            Logy.d("transaction panel already created, returning available instance");
        }
        return bookTransactionPanel;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton authorMenuButton;
    private javax.swing.JPanel centerPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton publisherMenuButton;
    private javax.swing.JButton shelfMenuButton;
    private javax.swing.JButton stockMenuButton;
    private java.awt.Color selectedMenuColor = new java.awt.Color(149, 149, 149);
    private java.awt.Color hoverMenuColor = new java.awt.Color(234,84,68);
    private java.awt.Color defaultMenuColor = new java.awt.Color(214,217,223);
    private java.awt.Color defaultMenuTextColor = new java.awt.Color(1, 1, 1);
    private java.awt.Color selectedMenuTextColor = new java.awt.Color(255, 255, 255);
    private javax.swing.border.Border selectedMenuBorder = javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(153, 153, 153)), javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(215, 215, 215)));
    private javax.swing.border.Border defaultMenuBorder = javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 51, 0));
    private javax.swing.JButton subjectMenuButton;
    private javax.swing.JPanel tabMenuPanel;
    private javax.swing.JPanel tabsPanel;
    private javax.swing.JLabel title;
    private javax.swing.JPanel titlePanel;
    private javax.swing.JPanel topPanel;
    private javax.swing.JButton transactionMenuButton;
    // End of variables declaration//GEN-END:variables

}
